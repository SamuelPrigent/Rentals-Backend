spring.application.name=back

# Server configuration
server.port=3000

# Configuration Postgre
spring.datasource.url=jdbc:postgresql://localhost:5432/springdb
spring.datasource.username=samuel
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging configuration
logging.level.root=ERROR
logging.level.com.example.back=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Package de base pour le scan des composants
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true
spring.main.sources=com.example.back

# Multipart configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Cloudinary configuration (faire fonctionne les var env ici)
# cloudinary.cloud-name=${env.CLOUDINARY_CLOUD_NAME}
# cloudinary.api-key=${env.CLOUDINARY_API_KEY}
# cloudinary.api-secret=${env.CLOUDINARY_API_SECRET}
cloudinary.cloud-name=dxqyjaa91
cloudinary.api-key=813252943864854
cloudinary.api-secret=qyqRCYwnn5Lj1YYC4Aqww3icH0Y
